<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Está temblando…</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" crossorigin="">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: "Chivo", sans-serif;
            font-weight: 300;
            line-height: 1.2;
            background: #fafafa;
            color: #222;
        }
        .container {
            width: min(800px, 90%);
            margin: 2rem auto;
        }
        h1 {
            font-size: calc(2rem + 3vw);
            font-weight: 900;
            padding: 0.125rem;
            margin-bottom: 1rem;
        }
        h2 {
            margin: 2rem 0 1rem 0;
            border-bottom: 1px solid black;
            font-weight: 800;
            padding: 0.25rem;
        }
        p {
            margin: 0.5rem 0;
            padding: 0.25rem;
        }
        a {
            color: #000;
            font-weight: 400;
        }
        a:hover {
            text-decoration: none;
        }
        code {
            font-size: 110%;
            color: #2B678C;
            background: #A7D0D9;
            border-radius: 2px;
            border: 1px solid #2A86BF;
            padding: 2px 4px;
        }
        table {
            width: 100%;
            text-align: center;
            border-collapse: collapse;
        }
        table a {
            text-decoration: none;
        }
        table a:hover:after {
            content: " ⤴";
        }
        th, td {
            border-bottom: 1px solid black;
            padding: 0.5rem 0.25rem;
        }
        th {
            line-height: 1.5;
            font-weight: 700;
        }
        td {
            font-size: 90%;
        }
        td strong {
            font-weight: 700;
        }
        td span {
            color: #999;
        }
        th:nth-child(1), th:nth-child(2),
        td:nth-child(1), td:nth-child(2) {
            text-align: left;
        }
        th svg {
            width: 1.5rem;
            height: 1.5rem;
            margin-bottom: -0.25rem;
            margin-left: -0.25rem;
            fill: #2B678C;
        }
        .mapas {
            width: 100%;
            height: 400px;
            margin: 1rem 0 3rem 0;
            box-shadow: 0 0 4px #ddd;
            background: #f0f0f0;
        }
        .leaflet-control {
            display: none;
        }
        .escondido {
            display: none;
        }
        footer {
            border-top: 3px solid black;
            margin: 2rem 0 0 0;
            padding: 1rem;
            text-align: center;
            font-size: 80%;
            letter-spacing: 1px;
        }
        #viz {
            margin-top: 1rem;
        }
    </style>
</head>
<body>
    <svg xmlns="http://www.w3.org/2000/svg" class="escondido">
        <symbol id="location" viewBox="0 0 100 100">
            <path d="M36.73,36.09a13,13,0,0,0,13,12.67A12.65,12.65,0,0,0,62.44,36.09a13.22,13.22,0,0,0-9.59-12.67v-18A31.37,31.37,0,0,1,81.14,36.58a30.89,30.89,0,0,1-4.55,16.36l-25,41.21H47.93L23,52.94A31.36,31.36,0,0,1,46.7,5.46v18A13.41,13.41,0,0,0,36.73,36.09Z"></path>
        </symbol>
        <symbol id="time" viewBox="0 0 100 100">
            <path d="M15.44,49H6.33a43.68,43.68,0,0,1,87.34,0L89.24,52.1,84.56,49a34.57,34.57,0,0,0-69.12,0Zm1.84,29.77A44.16,44.16,0,0,1,6.83,56.65h9.22a33.86,33.86,0,0,0,7.63,15.62Zm5.66,5.41,6.4-6.52A34.17,34.17,0,0,0,46.19,84.2v9.22A42.43,42.43,0,0,1,22.94,84.2ZM86.53,64.64,54.31,47.91V25.16H47.05V52.22l36,18.94ZM77.55,84a43.22,43.22,0,0,1-23.61,9.47V84.2a32.11,32.11,0,0,0,17-6.77Z"></path>
        </symbol>
        <symbol id="tsunami" viewBox="0 0 100 100">
            <path d="M91.33,88.22H8.92c-2.22,0-3.57-1.23-3.57-3a4.63,4.63,0,0,1,.61-2L17.77,62.51c5.17-9,16.36-13.9,27.06-13.9,11.57,0,17.35,5.54,17.35,10.46,0,4.3-3.32,7.13-6.77,8.12H53.07a3.49,3.49,0,0,0-3.56-3.82,3.42,3.42,0,0,0-3.32,3.45c0,3.81,4.79,7.5,13.16,7.5,7.75,0,18-3.57,24.6-9.1L94.28,83.3a3.51,3.51,0,0,1,.37,1.84A3,3,0,0,1,91.33,88.22Zm-10.21-28L52.71,10.36a3.19,3.19,0,0,0-5.66,0L26.14,47.51a36.15,36.15,0,0,1,12.67-4.06L49.88,23.89,73.37,64.36A19.72,19.72,0,0,0,81.12,60.17Z"></path>
        </symbol>
        <symbol id="magnitude" viewBox="0 0 100 100">
            <path d="M5.47,58.58H17A44.19,44.19,0,0,0,5.47,82.93Zm17.84,0h7.62l-3.56-35.8,13.4-5.66V30.65l12.06,4.8-4.06,22A31.82,31.82,0,0,0,18.39,89.08H9.53A40.25,40.25,0,0,1,23.31,58.58ZM50,61.9A27.18,27.18,0,0,1,77.18,89.08h-9a18.27,18.27,0,1,0-36.53,0H22.82A27.18,27.18,0,0,1,50,61.9Zm0,13.28a13.86,13.86,0,0,1,13.78,13.9H54.92a4.92,4.92,0,0,0-9.84,0h-9A14,14,0,0,1,50,75.18Zm8.24-16.6a35.85,35.85,0,0,0-5.29-1L57.5,32.87,45,28V15.28l4.42-1.85L69.56,18.6l3.81,40h3.32a40.25,40.25,0,0,1,13.78,30.5H81.61A31.68,31.68,0,0,0,58.24,58.58Zm24.72,0H94.53V82.93A45.16,45.16,0,0,0,83,58.58Z"></path>
        </symbol>
    </svg>

    <div class="container">
        <h1>Está temblando…</h1>
        <p>
            El <abbr title="United States Geological Survey">USGS</abbr> (Servicio Geológico de Estados Unidos) es responsable del
            <a href="https://www.usgs.gov/programs/earthquake-hazards" target="_blank">Earthquake Hazards Program</a>, que monitorea e informa sobre movimientos telúricos, además de evaluar sus impactos y riesgos.
        </p>
        <p>
            Los resultados son compartidos mediante <a href="https://earthquake.usgs.gov/earthquakes/feed/" target="_blank">Real-time Notifications</a> en formato GeoJSON. Aprovechando la
            <a href="https://earthquake.usgs.gov/earthquakes/feed/v1.0/geojson.php" target="_blank">estructura del Output</a>, accedemos a <code>features:[]</code> para visualizar los datos.
        </p>

        <h2>En Chile</h2>
        <table>
            <thead>
                <tr>
                    <th><svg><use href="#location"></use></svg> place</th>
                    <th><svg><use href="#time"></use></svg> time</th>
                    <th><svg><use href="#magnitude"></use></svg> mag</th>
                    <th><svg><use href="#tsunami"></use></svg> tsunami</th>
                </tr>
            </thead>
            <tbody id="cl"></tbody>
        </table>
        <div class="mapas" id="mapaCL"></div>

        <h2>En Japón</h2>
        <table>
            <thead>
                <tr>
                    <th><svg><use href="#location"></use></svg> place</th>
                    <th><svg><use href="#time"></use></svg> time</th>
                    <th><svg><use href="#magnitude"></use></svg> mag</th>
                    <th><svg><use href="#tsunami"></use></svg> tsunami</th>
                </tr>
            </thead>
            <tbody id="jp"></tbody>
        </table>
        <div class="mapas" id="mapaJP"></div>

        <h2>En Perú</h2>
        <table>
            <thead>
                <tr>
                    <th><svg><use href="#location"></use></svg> place</th>
                    <th><svg><use href="#time"></use></svg> time</th>
                    <th><svg><use href="#magnitude"></use></svg> mag</th>
                    <th><svg><use href="#tsunami"></use></svg> tsunami</th>
                </tr>
            </thead>
            <tbody id="pe"></tbody>
        </table>
        <div class="mapas" id="mapaPE"></div>

        <h2>En Rusia</h2>
        <table>
            <thead>
                <tr>
                    <th><svg><use href="#location"></use></svg> place</th>
                    <th><svg><use href="#time"></use></svg> time</th>
                    <th><svg><use href="#magnitude"></use></svg> mag</th>
                    <th><svg><use href="#tsunami"></use></svg> tsunami</th>
                </tr>
            </thead>
            <tbody id="ru"></tbody>
        </table>
        <div class="mapas" id="mapaRU"></div>

        <h2>Resumen</h2>
        <p>Registros sobre 3.9 M del último mes (se muestran los últimos 8 de cada país):</p>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 50" id="viz"></svg>

        <footer>
            <p>Desarrollado por <a href="#" target="_blank">Belén Porras</a> &copy; 2025</p>
        </footer>
    </div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin=""></script>
    <script>
        // Referencias a los tbody de las tablas
        const chilenos = document.getElementById("cl");
        const japoneses = document.getElementById("jp");
        const peruanos = document.getElementById("pe");
        const rusos = document.getElementById("ru");

        // Contadores
        let conteoChilenos = 0;
        let conteoJaponeses = 0;
        let conteoPeruanos = 0;
        let conteoRusos = 0;

        // Arrays para almacenar temblores
        const temblorChile = [];
        const temblorJapon = [];
        const temblorPeru = [];
        const temblorRusia = [];

        // Función principal
        async function datos(url) {
            try {
                const consulta = await fetch(url);
                const data = await consulta.json();
                const temblores = data.features;
                
                console.log(`Total de temblores cargados: ${temblores.length}`);

                // Crear mapas
                const mapaChile = L.map("mapaCL").setView([-33.45, -70.67], 4);
                L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                    attribution: '&copy; OpenStreetMap'
                }).addTo(mapaChile);

                const mapaJapon = L.map("mapaJP").setView([36.20, 138.25], 4);
                L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                    attribution: '&copy; OpenStreetMap'
                }).addTo(mapaJapon);

                const mapaPeru = L.map("mapaPE").setView([-9.19, -75.02], 5);
                L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                    attribution: '&copy; OpenStreetMap'
                }).addTo(mapaPeru);

                const mapaRusia = L.map("mapaRU").setView([61.52, 105.32], 3);
                L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                    maxZoom: 19,
                    attribution: '&copy; OpenStreetMap'
                }).addTo(mapaRusia);

                // Recolectar temblores por país
                temblores.forEach((t) => {
                    if (t.properties.place.includes("Chile") && t.properties.mag > 3.9) {
                        temblorChile.push(t);
                    }
                    if (t.properties.place.includes("Japan") && t.properties.mag > 3.9) {
                        temblorJapon.push(t);
                    }
                    if (t.properties.place.includes("Peru") && t.properties.mag > 3.9) {
                        temblorPeru.push(t);
                    }
                    if (t.properties.place.includes("Russia") && t.properties.mag > 3.9) {
                        temblorRusia.push(t);
                    }
                });

                // Mostrar últimos 8 de Chile
                temblorChile.slice(0, 8).forEach((t) => {
                    chilenos.innerHTML += `<tr>
                        <td><a href="${t.properties.url}" target="_blank">${t.properties.place}</a></td>
                        <td>${tiempo(t.properties.time)}</td>
                        <td>${magnitud(t.properties.mag)}</td>
                        <td>${tsunami(t.properties.tsunami)}</td>
                    </tr>`;
                    L.marker([t.geometry.coordinates[1], t.geometry.coordinates[0]])
                        .addTo(mapaChile)
                        .bindPopup(t.properties.place);
                });
                conteoChilenos = temblorChile.length;

                // Mostrar últimos 8 de Japón
                temblorJapon.slice(0, 8).forEach((t) => {
                    japoneses.innerHTML += `<tr>
                        <td><a href="${t.properties.url}" target="_blank">${t.properties.place}</a></td>
                        <td>${tiempo(t.properties.time)}</td>
                        <td>${magnitud(t.properties.mag)}</td>
                        <td>${tsunami(t.properties.tsunami)}</td>
                    </tr>`;
                    L.marker([t.geometry.coordinates[1], t.geometry.coordinates[0]])
                        .addTo(mapaJapon)
                        .bindPopup(t.properties.place);
                });
                conteoJaponeses = temblorJapon.length;

                // Mostrar últimos 8 de Perú
                temblorPeru.slice(0, 8).forEach((t) => {
                    peruanos.innerHTML += `<tr>
                        <td><a href="${t.properties.url}" target="_blank">${t.properties.place}</a></td>
                        <td>${tiempo(t.properties.time)}</td>
                        <td>${magnitud(t.properties.mag)}</td>
                        <td>${tsunami(t.properties.tsunami)}</td>
                    </tr>`;
                    L.marker([t.geometry.coordinates[1], t.geometry.coordinates[0]])
                        .addTo(mapaPeru)
                        .bindPopup(t.properties.place);
                });
                conteoPeruanos = temblorPeru.length;

                // Mostrar últimos 8 de Rusia
                temblorRusia.slice(0, 8).forEach((t) => {
                    rusos.innerHTML += `<tr>
                        <td><a href="${t.properties.url}" target="_blank">${t.properties.place}</a></td>
                        <td>${tiempo(t.properties.time)}</td>
                        <td>${magnitud(t.properties.mag)}</td>
                        <td>${tsunami(t.properties.tsunami)}</td>
                    </tr>`;
                    L.marker([t.geometry.coordinates[1], t.geometry.coordinates[0]])
                        .addTo(mapaRusia)
                        .bindPopup(t.properties.place);
                });
                conteoRusos = temblorRusia.length;

                // Crear visualización SVG
                const viz = document.getElementById("viz");
                viz.innerHTML = `
                    <g>
                        <circle cx="10" cy="25" r="${conteoChilenos / 2}" fill="#d62728"></circle>
                        <text x="10" y="25" font-size="1.5" dominant-baseline="middle" text-anchor="middle" fill="white">${conteoChilenos}</text>
                        <text x="10" y="45" font-size="2" dominant-baseline="middle" text-anchor="middle">Chile</text>
                    </g>
                    <g transform="translate(25)">
                        <circle cx="10" cy="25" r="${conteoJaponeses / 2}" fill="#ff7f0e"></circle>
                        <text x="10" y="25" font-size="1.5" dominant-baseline="middle" text-anchor="middle" fill="white">${conteoJaponeses}</text>
                        <text x="10" y="45" font-size="2" dominant-baseline="middle" text-anchor="middle">Japón</text>
                    </g>
                    <g transform="translate(50)">
                        <circle cx="10" cy="25" r="${conteoPeruanos / 2}" fill="#2ca02c"></circle>
                        <text x="10" y="25" font-size="1.5" dominant-baseline="middle" text-anchor="middle" fill="white">${conteoPeruanos}</text>
                        <text x="10" y="45" font-size="2" dominant-baseline="middle" text-anchor="middle">Perú</text>
                    </g>
                    <g transform="translate(75)">
                        <circle cx="10" cy="25" r="${conteoRusos / 2}" fill="#9467bd"></circle>
                        <text x="10" y="25" font-size="1.5" dominant-baseline="middle" text-anchor="middle" fill="white">${conteoRusos}</text>
                        <text x="10" y="45" font-size="2" dominant-baseline="middle" text-anchor="middle">Rusia</text>
                    </g>
                `;

                console.log(`Chile: ${conteoChilenos}, Japón: ${conteoJaponeses}, Perú: ${conteoPeruanos}, Rusia: ${conteoRusos}`);

            } catch (error) {
                console.error("Error al cargar los datos:", error);
                alert("Error al cargar los datos del USGS. Verifica tu conexión.");
            }
        }

        // Funciones auxiliares
        function magnitud(x) {
            return x > 4.9 ? `<strong>${x}</strong>` : x;
        }

        function tiempo(x) {
            const dato = new Date(x);
            const opcionesFecha = { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
            };
            const opcionesHora = { 
                hour: '2-digit', 
                minute: '2-digit',
                hour12: false 
            };
            const fecha = dato.toLocaleDateString('es-ES', opcionesFecha);
            const hora = dato.toLocaleTimeString('es-ES', opcionesHora);
            return `${fecha} a las ${hora} hrs.`;
        }

        function tsunami(x) {
            return x == 1 
                ? '<strong>¡Alerta de tsunami!</strong>' 
                : '<span>Sin alerta</span>';
        }

        // Ejecutar
        datos("https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson");
    </script>
</body>
</html>